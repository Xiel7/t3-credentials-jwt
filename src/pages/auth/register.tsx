import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../../utils/trpc";
import { useFormik } from 'formik';

// const registerUser = (values : {username: string, password: string, email: string}) => {
//     console.log(result);
// }

const SignupForm = () => {
    // Note that we have to initialize ALL of fields with values. These
    // could come from props, but since we don’t want to prefill this form,
    // we just use an empty string. If we don’t do this, React will yell
    // at us.
    const register = trpc.useMutation("register.user");

    const formik = useFormik({
        initialValues: {
            username: '',
            password: '',
            email: '',
        },
        onSubmit: async values => {
            // alert(JSON.stringify(values, null, 2));
            register.mutate(values);
        },
    });
    return (
        <form onSubmit={formik.handleSubmit} className='w-2/3'>
            {register.data ? <div className='rounded-lg p-4 bg-purple-100 font-extrabold leading-normal text-center'>User Registered</div> : ''}
            {register.error ? <div className='rounded-lg p-4 bg-red-300 font-extrabold leading-normal text-center'>Failed to register</div> : ''}
            <div className='flex flex-col gap-4'>
                <label htmlFor="username" className='text-2xl font-bold'>Username</label>
                <input className='border-black border-2 p-2 rounded-md'
                    id="username"
                    name="username"
                    type="text"
                    onChange={formik.handleChange}
                    value={formik.values.username}
                />

                <label htmlFor="password" className='text-2xl font-bold'>Password</label>
                <input className='border-black border-2 p-2 rounded-md'
                    id="password"
                    name="password"
                    type="password"
                    onChange={formik.handleChange}
                    value={formik.values.password}
                />

                <label htmlFor="email" className='text-2xl font-bold'>Email</label>
                <input className='border-black border-2 p-2 rounded-md'
                    id="email"
                    name="email"
                    type="email"
                    onChange={formik.handleChange}
                    value={formik.values.email}
                />
                <button type="submit" className='px-6 py-4 rounded-lg bg-purple-300 text-gray-700 leading-normal font-extrabold'>Submit</button>
            </div>
        </form>
    );
};

const SignUpPage: NextPage = () => {

    return (
        <>
            <Head>
                <title>Create T3 App</title>
                <meta name="description" content="Generated by create-t3-app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
                <h1 className="text-5xl md:text-[5rem] leading-normal font-extrabold text-gray-700">
                    Create <span className="text-purple-300">T3</span> App
                </h1>
                <SignupForm />
            </main>
        </>
    );
};

export default SignUpPage;
